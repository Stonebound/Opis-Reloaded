buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "1.3.0_dev1_1.10.2"
group= "mcp.mobius.opis" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Opis"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.10.2-12.18.3.2202"
    runDir = "run"
    mappings = "snapshot_20161111"
    makeObfSourceJar = false
}

configurations {
    shade
    compile.extendsFrom shade    
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://repo.spongepowered.org/maven/'
    }
}

dependencies {
    shade 'org.apache.commons:commons-math3:3.2'
    shade 'org.jfree:jcommon:1.0.21'
    shade 'org.jfree:jfreechart:1.0.17'
    shade 'com.miglayout:miglayout-swing:4.2'
    shade 'net.sf.opencsv:opencsv:2.3'
    shade('org.spongepowered:mixin:0.6-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
    }
}

def root = project.projectDir.parentFile

sourceSets {
    main {
        refMap = "mixins.opis.refmap.json"
        java {
            srcDir new File(root, "src")
        }
        resources {
            srcDir new File(root, "resources")
        }
    }
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}


artifacts {
    archives sourceJar, devJar
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) exclude 'META-INF', 'META-INF/**', 'LICENSE.txt'
    }
    manifest {
        attributes(
                'MixinConfigs': 'mixins.opis.json',
                'ForceLoadAsMod' : true,
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker'
        )

    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

}
